{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://127.0.0.1:8000';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000 // 30 seconds timeout\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  console.log('Making request to:', config.url);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  console.log('Response received:', response.data);\n  return response;\n}, error => {\n  var _error$response, _error$response$data, _error$response2;\n  console.error('Response error:', error);\n  if (error.code === 'ECONNREFUSED') {\n    throw new Error('Cannot connect to server. Please make sure the backend is running on port 8000.');\n  }\n  if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.error) {\n    throw new Error(error.response.data.error);\n  }\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 413) {\n    throw new Error('File too large. Please choose a smaller image.');\n  }\n  throw new Error(error.message || 'An unexpected error occurred.');\n});\nexport const processOMRImage = async file => {\n  const formData = new FormData();\n  formData.append('image', file);\n  try {\n    const response = await api.post('/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error processing OMR image:', error);\n    throw error;\n  }\n};\nexport const checkServerHealth = async () => {\n  try {\n    const response = await api.get('/docs');\n    return response.status === 200;\n  } catch (error) {\n    console.error('Server health check failed:', error);\n    return false;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","timeout","interceptors","request","use","config","console","log","url","error","Promise","reject","response","data","_error$response","_error$response$data","_error$response2","code","Error","status","message","processOMRImage","file","formData","FormData","append","post","headers","checkServerHealth","get"],"sources":["D:/hackOMR/project/react-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://127.0.0.1:8000';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000, // 30 seconds timeout\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log('Making request to:', config.url);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('Response received:', response.data);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('Response error:', error);\r\n    if (error.code === 'ECONNREFUSED') {\r\n      throw new Error('Cannot connect to server. Please make sure the backend is running on port 8000.');\r\n    }\r\n    if (error.response?.data?.error) {\r\n      throw new Error(error.response.data.error);\r\n    }\r\n    if (error.response?.status === 413) {\r\n      throw new Error('File too large. Please choose a smaller image.');\r\n    }\r\n    throw new Error(error.message || 'An unexpected error occurred.');\r\n  }\r\n);\r\n\r\nexport const processOMRImage = async (file) => {\r\n  const formData = new FormData();\r\n  formData.append('image', file);\r\n\r\n  try {\r\n    const response = await api.post('/upload', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error processing OMR image:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const checkServerHealth = async () => {\r\n  try {\r\n    const response = await api.get('/docs');\r\n    return response.status === 200;\r\n  } catch (error) {\r\n    console.error('Server health check failed:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB;;AAE5C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE,KAAK,CAAE;AAClB,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACVC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,MAAM,CAACG,GAAG,CAAC;EAC7C,OAAOH,MAAM;AACf,CAAC,EACAI,KAAK,IAAK;EACTH,OAAO,CAACG,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAX,GAAG,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC1BQ,QAAQ,IAAK;EACZN,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEK,QAAQ,CAACC,IAAI,CAAC;EAChD,OAAOD,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAK,eAAA,EAAAC,oBAAA,EAAAC,gBAAA;EACTV,OAAO,CAACG,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;EACvC,IAAIA,KAAK,CAACQ,IAAI,KAAK,cAAc,EAAE;IACjC,MAAM,IAAIC,KAAK,CAAC,iFAAiF,CAAC;EACpG;EACA,KAAAJ,eAAA,GAAIL,KAAK,CAACG,QAAQ,cAAAE,eAAA,gBAAAC,oBAAA,GAAdD,eAAA,CAAgBD,IAAI,cAAAE,oBAAA,eAApBA,oBAAA,CAAsBN,KAAK,EAAE;IAC/B,MAAM,IAAIS,KAAK,CAACT,KAAK,CAACG,QAAQ,CAACC,IAAI,CAACJ,KAAK,CAAC;EAC5C;EACA,IAAI,EAAAO,gBAAA,GAAAP,KAAK,CAACG,QAAQ,cAAAI,gBAAA,uBAAdA,gBAAA,CAAgBG,MAAM,MAAK,GAAG,EAAE;IAClC,MAAM,IAAID,KAAK,CAAC,gDAAgD,CAAC;EACnE;EACA,MAAM,IAAIA,KAAK,CAACT,KAAK,CAACW,OAAO,IAAI,+BAA+B,CAAC;AACnE,CACF,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,MAAOC,IAAI,IAAK;EAC7C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,IAAI,CAAC;EAE9B,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMd,GAAG,CAAC4B,IAAI,CAAC,SAAS,EAAEH,QAAQ,EAAE;MACnDI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,OAAOf,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMmB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMd,GAAG,CAAC+B,GAAG,CAAC,OAAO,CAAC;IACvC,OAAOjB,QAAQ,CAACO,MAAM,KAAK,GAAG;EAChC,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO,KAAK;EACd;AACF,CAAC;AAED,eAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}